{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dave\\\\Projects\\\\BrewGuide\\\\brewguide\\\\brewguide\\\\client\\\\src\\\\containers\\\\Contact\\\\ContactForm\\\\ContactForm.js\";\nimport React, { Component } from 'react';\nimport './ContactForm.css';\n\nclass contactForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      message: '',\n      email: '',\n      sent: false,\n      buttonText: 'Send Message'\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"contact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      id: \"contact-form\",\n      action: \"/send\",\n      onSubmit: this.handleSubmit.bind(this),\n      method: \"POST\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Name\",\n      value: this.state.name,\n      onChange: this.onNameChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"email\",\n      className: \"form-control\",\n      placeholder: \"Email Address\",\n      \"aria-describedby\": \"emailHelp\",\n      value: this.state.email,\n      onChange: this.onEmailChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"form-control\",\n      rows: \"5\",\n      value: this.state.message,\n      onChange: this.onMessageChange.bind(this),\n      placeholder: \"Write Your Message Here\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.state.buttonText)));\n  }\n\n  onNameChange(event) {\n    this.setState({\n      name: event.target.value\n    });\n  }\n\n  onEmailChange(event) {\n    this.setState({\n      email: event.target.value\n    });\n  }\n\n  onMessageChange(event) {\n    this.setState({\n      message: event.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    console.log(this.state);\n    fetch('http://localhost:3002/send', {\n      method: \"POST\",\n      body: JSON.stringify(this.state),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(response => {\n      if (response.status === 'success') {\n        alert(\"Message Sent.\");\n        this.resetForm();\n      } else if (response.status === 'fail') {\n        alert(\"Message failed to send.\");\n      }\n    });\n  }\n\n  resetForm() {\n    document.getElementById('contact-form').reset();\n  }\n\n}\n\n;\nexport default contactForm;","map":{"version":3,"sources":["C:/Users/Dave/Projects/BrewGuide/brewguide/brewguide/client/src/containers/Contact/ContactForm/ContactForm.js"],"names":["React","Component","contactForm","constructor","props","state","name","message","email","sent","buttonText","render","handleSubmit","bind","onNameChange","onEmailChange","onMessageChange","event","setState","target","value","e","preventDefault","console","log","fetch","method","body","JSON","stringify","headers","then","response","json","status","alert","resetForm","document","getElementById","reset"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './ContactForm.css';\r\n\r\nclass contactForm extends Component  {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            message: '',\r\n            email: '',\r\n            sent: false,\r\n            buttonText: 'Send Message'\r\n        }\r\n      }\r\n\r\n\r\n    \r\n    render() {\r\n     return(\r\n       <div className=\"contact\">\r\n           <form id=\"contact-form\" action='/send'onSubmit={this.handleSubmit.bind(this)} method=\"POST\">\r\n           <div className=\"form-group\">\r\n                <input type=\"text\" className=\"form-control\" placeholder='Name' value={this.state.name} onChange={this.onNameChange.bind(this)} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input type=\"email\" className=\"form-control\" placeholder='Email Address' aria-describedby=\"emailHelp\" value={this.state.email} onChange={this.onEmailChange.bind(this)} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <textarea \r\n                    className=\"form-control\" \r\n                    rows=\"5\" value={this.state.message} \r\n                    onChange={this.onMessageChange.bind(this)}\r\n                    placeholder=\"Write Your Message Here\" />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">{this.state.buttonText}</button>\r\n            </form>\r\n        </div>\r\n     );\r\n    }\r\n    \r\n      onNameChange(event) {\r\n        this.setState({name: event.target.value})\r\n      }\r\n    \r\n      onEmailChange(event) {\r\n        this.setState({email: event.target.value})\r\n      }\r\n    \r\n      onMessageChange(event) {\r\n        this.setState({message: event.target.value})\r\n      }\r\n\r\n      handleSubmit(e){\r\n        e.preventDefault();\r\n        console.log(this.state)\r\n\r\n        fetch('http://localhost:3002/send',{\r\n          method: \"POST\",\r\n          body: JSON.stringify(this.state),\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          },\r\n        }).then(\r\n        (response) => (response.json())\r\n         ).then((response)=>{\r\n        if (response.status === 'success'){\r\n          alert(\"Message Sent.\"); \r\n          this.resetForm()\r\n        }else if(response.status === 'fail'){\r\n          alert(\"Message failed to send.\")\r\n        }\r\n      })\r\n    }\r\n\r\n        \r\n    resetForm(){\r\n      document.getElementById('contact-form').reset();\r\n  };\r\n};\r\n\r\n    \r\nexport default contactForm;"]},"metadata":{},"sourceType":"module"}